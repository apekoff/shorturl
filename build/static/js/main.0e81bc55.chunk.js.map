{"version":3,"sources":["components/Header.js","components/UrlForm.js","components/Created.js","components/Main.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","href","Component","UrlForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isCreated","createdData","isChecked","error","errorMessage","handleChange","bind","assertThisInitialized","setState","url","_this2","axios","request","method","data","then","response","undefined","addCreatedData","console","log","catch","err","message","e","preventDefault","original","refs","value","short","uniqueString","addUrl","hasErrors","onSubmit","type","placeholder","aria-label","ref","name","id","checked","onChange","htmlFor","defaultValue","Created","window","location","origin","target","rel","Main","components_UrlForm","components_Created","Footer","App","components_Header","components_Main","components_Footer","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e81bc55.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <nav className=\"navbar navbar-light bg-info\">\n        <a className=\"navbar-brand text-white\" href=\"/\">\n          ShortUrl\n        </a>\n      </nav>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport uniqueString from 'unique-string';\nimport axios from 'axios';\n\nclass UrlForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isCreated: false,\n      createdData: {},\n      isChecked: false,\n      error: false,\n      errorMessage: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange() {\n    this.setState({ isChecked: !this.state.isChecked });\n  }\n\n  addUrl(url) {\n    axios\n      .request({\n        method: 'post',\n        url: '/api/urls',\n        data: url,\n      })\n      .then((response) => {\n        this.setState({\n          error: undefined,\n          errorMessage: undefined,\n        });\n        this.setState({ createdData: response.data });\n        this.props.addCreatedData(response.data);\n        console.log(response);\n      })\n      .catch((err) => {\n        this.setState({ createdData: undefined });\n        this.setState({\n          error: true,\n          errorMessage: err.response.data.error.message,\n        });\n      });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    let url = {\n      original: this.refs.original.value,\n      short: !this.refs.short ? uniqueString() : this.refs.short.value,\n    };\n    this.addUrl(url);\n  }\n\n  render() {\n    const isChecked = this.state.isChecked;\n    const hasErrors = this.state.error;\n    return (\n      <form\n        onSubmit={this.onSubmit.bind(this)}\n        className=\"form-inline form-short row align-items-center justify-content-center mx-auto\"\n      >\n        <br />\n        <input\n          className=\"form-control mr-sm-2\"\n          type=\"text\"\n          placeholder=\"Url\"\n          aria-label=\"Url\"\n          ref=\"original\"\n          name=\"original\"\n        />\n        <div className=\"form-check\">\n          <input type=\"checkbox\" id=\"is-checked\" checked={this.state.isChecked} onChange={this.handleChange} />\n          <label htmlFor=\"is-checked\" className=\"mr-sm-2 ml-sm-2\">\n            Custom short name?\n          </label>\n        </div>\n        {isChecked ? (\n          <input\n            className=\"form-control mr-sm-2\"\n            type=\"text\"\n            placeholder=\"Custom short name\"\n            aria-label=\"Short name\"\n            ref=\"short\"\n            name=\"short\"\n            defaultValue=\"\"\n          />\n        ) : (\n          ''\n        )}\n\n        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">\n          Short\n        </button>\n        {hasErrors ? <div className=\"text-danger w-100 mb-1\">{this.state.errorMessage}</div> : ''}\n      </form>\n    );\n  }\n}\n\nexport default UrlForm;\n","import React, { Component } from 'react';\n\nclass Created extends Component {\n  render() {\n    console.log(this.props.createdData);\n    const domain = window.location.origin;\n    const url = domain + '/' + this.props.createdData.short;\n    return (\n      <div>\n        Url created <br />\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n          <code>{url}</code>\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default Created;\n","import React, {Component} from 'react';\nimport UrlForm from './UrlForm';\nimport Created from './Created';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isCreated: false,\n      createdData: {},\n    };\n    this.addCreatedData = this.addCreatedData.bind(this);\n  }\n\n  addCreatedData(data) {\n    this.setState({isCreated: true, createdData: data});\n  }\n\n  render() {\n    const isCreated = this.state.isCreated;\n    return (\n      <div className=\"container\">\n        <br/>\n        <h1>Shorturl</h1>\n        <UrlForm addCreatedData={this.addCreatedData}/>\n        {isCreated ? <Created createdData={this.state.createdData}/> : ''}\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from \"react\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer className=\"bg-info\">\n        <div className=\"container\">\n          <p className=\"text-muted\">ShortUrl</p>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Footer from \"./components/Footer\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Main />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}